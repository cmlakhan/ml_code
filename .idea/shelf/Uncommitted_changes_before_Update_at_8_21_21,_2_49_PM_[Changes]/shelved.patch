Index: sequential_modeling/text_generation_huffpost.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import json\nimport pandas as pd\n\nf = open('News_Category_Dataset_v2.json',)\n\ndata = []\nfor line in f:\n    data.append(json.loads(line))\n\nnews_df = pd.DataFrame(data)\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sequential_modeling/text_generation_huffpost.py b/sequential_modeling/text_generation_huffpost.py
--- a/sequential_modeling/text_generation_huffpost.py	(revision 3ebef815a5113163152be958d8db99951db183be)
+++ b/sequential_modeling/text_generation_huffpost.py	(date 1629467558651)
@@ -1,12 +1,88 @@
 import json
 import pandas as pd
+import urllib.request
+
+from __future__ import unicode_literals, print_function, division
+import unicodedata
+import string
+
+import torch
+import torch.nn as nn
+
+
+
+def unicodeToAscii(s):
+    return ''.join(
+        c for c in unicodedata.normalize('NFD', s)
+        if unicodedata.category(c) != 'Mn'
+        and c in all_letters
+    )
+
+# One-hot vector for category
+def categoryTensor(category):
+    li = all_categories.index(category)
+    tensor = torch.zeros(1, n_categories)
+    tensor[0][li] = 1
+    return tensor
+
+# One-hot matrix of first to last letters (not including EOS) for input
+def inputTensor(line):
+    tensor = torch.zeros(len(line), 1, n_letters)
+    for li in range(len(line)):
+        letter = line[li]
+        tensor[li][0][all_letters.find(letter)] = 1
+    return tensor
+
+# LongTensor of second letter to end (EOS) for target
+def targetTensor(line):
+    letter_indexes = [all_letters.find(line[li]) for li in range(1, len(line))]
+    letter_indexes.append(n_letters - 1) # EOS
+    return torch.LongTensor(letter_indexes)
+
+
+class RNN(nn.Module):
+    def __init__(self, input_size, hidden_size, output_size):
+        super(RNN, self).__init__()
+        self.hidden_size = hidden_size
+
+        self.i2h = nn.Linear(n_categories + input_size + hidden_size, hidden_size)
+        self.i2o = nn.Linear(n_categories + input_size + hidden_size, output_size)
+        self.o2o = nn.Linear(hidden_size + output_size, output_size)
+        self.dropout = nn.Dropout(0.1)
+        self.softmax = nn.LogSoftmax(dim=1)
+
+    def forward(self, category, input, hidden):
+        input_combined = torch.cat((category, input, hidden), 1)
+        hidden = self.i2h(input_combined)
+        output = self.i2o(input_combined)
+        output_combined = torch.cat((hidden, output), 1)
+        output = self.o2o(output_combined)
+        output = self.dropout(output)
+        output = self.softmax(output)
+        return output, hidden
+
+    def initHidden(self):
+        return torch.zeros(1, self.hidden_size)
+
+
+all_letters = string.ascii_letters + " .,;'-"
+n_letters = len(all_letters) + 1  # Plus EOS marker
 
-f = open('News_Category_Dataset_v2.json',)
+
+url = "https://github.com/cmlakhan/ml_code/raw/master/sequential_modeling/News_Category_Dataset_v2.json"
+file = urllib.request.urlopen(url)
 
 data = []
-for line in f:
+for line in file:
     data.append(json.loads(line))
 
 news_df = pd.DataFrame(data)
 
+all_categories = news_df.category.unique().tolist()
+
+n_categories = len(all_categories)
+
+
+news_df[['headline_ascii']] = news_df.headline.apply(lambda x: unicodeToAscii(x))
+
 
Index: sequential_modeling/movie_categorization.py
===================================================================
diff --git a/sequential_modeling/movie_categorization.py b/sequential_modeling/movie_categorization.py
deleted file mode 100644
--- a/sequential_modeling/movie_categorization.py	(revision 3ebef815a5113163152be958d8db99951db183be)
+++ /dev/null	(revision 3ebef815a5113163152be958d8db99951db183be)
@@ -1,3 +0,0 @@
-import json
-
-f = open('https://www.dropbox.com/s/nkja4978p96f2th/News_Category_Dataset_v2.json?dl=0')
\ No newline at end of file
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"InspectionProjectProfileManager\">\n  <settings>\n    <option name=\"USE_PROJECT_PROFILE\" value=\"false\" />\n    <version value=\"1.0\" />\n  </settings>\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
--- a/.idea/inspectionProfiles/profiles_settings.xml	(revision 3ebef815a5113163152be958d8db99951db183be)
+++ b/.idea/inspectionProfiles/profiles_settings.xml	(date 1629467087190)
@@ -1,5 +1,6 @@
 <component name="InspectionProjectProfileManager">
   <settings>
+    <option name="PROJECT_PROFILE" value="Default" />
     <option name="USE_PROJECT_PROFILE" value="false" />
     <version value="1.0" />
   </settings>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"JavaScriptSettings\">\n    <option name=\"languageLevel\" value=\"ES6\" />\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.8 (ADSP_genomics)\" project-jdk-type=\"Python SDK\" />\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 3ebef815a5113163152be958d8db99951db183be)
+++ b/.idea/misc.xml	(date 1629467087178)
@@ -4,4 +4,7 @@
     <option name="languageLevel" value="ES6" />
   </component>
   <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8 (ADSP_genomics)" project-jdk-type="Python SDK" />
+  <component name="PythonCompatibilityInspectionAdvertiser">
+    <option name="version" value="3" />
+  </component>
 </project>
\ No newline at end of file
